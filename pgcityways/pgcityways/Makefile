#############################################################################
# Makefile for building: libpgcityways.so.1.03.0
# Generated by qmake (2.01a) (Qt 4.8.2) on: Sat Dec 29 00:58:42 2012
# Project:  pgcityways.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile pgcityways.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT
CFLAGS        = -m64 -pipe -O2 -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -std=c++0x -O2 -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/boost -I/usr/include/postgresql/9.2/server
LINK          = g++
LFLAGS        = -m64 -Wl,-O1 -shared -Wl,-soname,libpgcityways.so.1
LIBS          = $(SUBLIBS)   -L/usr/lib/boost -lboost_graph -Wl,-rpath,lib -Wl,-rpath,. 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = db/shortestpaths.c \
		boost_dijkstra.cpp \
		graph.cpp \
		ipathfinder.cpp \
		dijkstra_pathfinder.cpp \
		path.cpp \
		pathscontainer.cpp \
		geopoint.cpp \
		graphdata.cpp 
OBJECTS       = release/shortestpaths.o \
		release/boost_dijkstra.o \
		release/graph.o \
		release/ipathfinder.o \
		release/dijkstra_pathfinder.o \
		release/path.o \
		release/pathscontainer.o \
		release/geopoint.o \
		release/graphdata.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/dll.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		pgcityways.pro
QMAKE_TARGET  = pgcityways
DESTDIR       = release/
TARGET        = libpgcityways.so.1.03.0
TARGETA       = release/libpgcityways.a
TARGETD       = libpgcityways.so.1.03.0
TARGET0       = libpgcityways.so
TARGET1       = libpgcityways.so.1
TARGET2       = libpgcityways.so.1.03

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  release/$(TARGET)

release/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) release/ || $(MKDIR) release/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) release/$(TARGET)
	-$(DEL_FILE) release/$(TARGET0)
	-$(DEL_FILE) release/$(TARGET1)
	-$(DEL_FILE) release/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) release/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: pgcityways.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/dll.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile pgcityways.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/dll.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile pgcityways.pro

dist: 
	@$(CHK_DIR_EXISTS) release/pgcityways1.03 || $(MKDIR) release/pgcityways1.03 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/pgcityways1.03/ && (cd `dirname release/pgcityways1.03` && $(TAR) pgcityways1.03.tar pgcityways1.03 && $(COMPRESS) pgcityways1.03.tar) && $(MOVE) `dirname release/pgcityways1.03`/pgcityways1.03.tar.gz . && $(DEL_FILE) -r release/pgcityways1.03


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) release/$(TARGET) 
	-$(DEL_FILE) release/$(TARGET0) release/$(TARGET1) release/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check:

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

release/shortestpaths.o: db/shortestpaths.c db/shortestpaths.h \
		db/db_types.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/shortestpaths.o db/shortestpaths.c

release/boost_dijkstra.o: boost_dijkstra.cpp db/shortestpaths.h \
		db/db_types.h \
		dijkstra_pathfinder.h \
		ipathfinder.h \
		graph.h \
		pathscontainer.h \
		path.h \
		graphdata.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/boost_dijkstra.o boost_dijkstra.cpp

release/graph.o: graph.cpp graph.h \
		pathscontainer.h \
		path.h \
		graphdata.h \
		db/db_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/graph.o graph.cpp

release/ipathfinder.o: ipathfinder.cpp ipathfinder.h \
		graph.h \
		pathscontainer.h \
		path.h \
		graphdata.h \
		db/db_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ipathfinder.o ipathfinder.cpp

release/dijkstra_pathfinder.o: dijkstra_pathfinder.cpp dijkstra_pathfinder.h \
		ipathfinder.h \
		graph.h \
		pathscontainer.h \
		path.h \
		graphdata.h \
		db/db_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/dijkstra_pathfinder.o dijkstra_pathfinder.cpp

release/path.o: path.cpp path.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/path.o path.cpp

release/pathscontainer.o: pathscontainer.cpp pathscontainer.h \
		path.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/pathscontainer.o pathscontainer.cpp

release/geopoint.o: geopoint.cpp geopoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/geopoint.o geopoint.cpp

release/graphdata.o: graphdata.cpp graphdata.h \
		db/db_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/graphdata.o graphdata.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/ 
	-$(INSTALL_PROGRAM) "release/$(TARGET)" "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET2)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET0)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET1)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/$(TARGET2)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/postgresql/9.2/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

